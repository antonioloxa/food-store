{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/antonioloza/Desktop/MERNProject/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","paymentResult"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL } from \"../constants/orderConstants\"; \n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        })\n\n        const { \n                userLogin: { userInfo },\n            } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.post(`/api/orders`, order, config)\n\n        dispatch ({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        })\n        \n    } catch (error) {\n        dispatch ({\n            type: ORDER_CREATE_FAIL,\n            payload: \n            error.response && error.response.data.message \n                ? error.response.data.message \n                : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        })\n\n        const { \n                userLogin: { userInfo },\n            } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch ({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        })\n        \n    } catch (error) {\n        dispatch ({\n            type: ORDER_DETAILS_FAIL,\n            payload: \n            error.response && error.response.data.message \n                ? error.response.data.message \n                : error.message,\n        })\n    }\n}\n\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST,\n        })\n\n        const { \n                userLogin: { userInfo },\n            } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch ({\n            type: ORDER_PAY_SUCCESS,\n            payload: data,\n        })\n        \n    } catch (error) {\n        dispatch ({\n            type: ORDER_PAY_FAIL,\n            payload: \n            error.response && error.response.data.message \n                ? error.response.data.message \n                : error.message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}