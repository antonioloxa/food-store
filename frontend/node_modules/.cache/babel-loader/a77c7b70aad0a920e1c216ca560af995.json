{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const newItem = action.payload;\n      const existItem = state.cartItems.find(currentItem => currentItem.product === newItem.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: [state.cartItems].map(x => x.product === existItem.product ? newItem : x)\n        };\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems, newItem]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/antonioloza/Desktop/MERNProject/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","newItem","payload","existItem","find","currentItem","product","map","x"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAwC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,aAAL;AACI,YAAMM,OAAO,GAAGF,MAAM,CAACG,OAAvB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CACbC,WAAD,IAAiBA,WAAW,CAACC,OAAZ,KAAwBL,OAAO,CAACK,OADnC,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAE,CAACD,KAAK,CAACC,SAAP,EAAkBS,GAAlB,CAAuBC,CAAD,IAC7BA,CAAC,CAACF,OAAF,KAAcH,SAAS,CAACG,OAAxB,GACEL,OADF,GAEEO,CAHK;AAFR,SAAP;AAQH;;AACG,aAAO,EACH,GAAGX,KADA;AAEHC,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,OAArB;AAFR,OAAP;;AAKR;AACI,aAAOJ,KAAP;AArBR;AAuBH,CAxBM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/cartConstants\"\n\nexport const cartReducer = (state = { cartItems: [] }, action ) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const newItem = action.payload\n            const existItem = state.cartItems.find(\n                (currentItem) => currentItem.product === newItem.product)\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: [state.cartItems].map((x) => \n                        x.product === existItem.product \n                        ? newItem \n                        : x\n                    ),\n                }\n            } \n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, newItem]\n\n                }\n        default: \n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}