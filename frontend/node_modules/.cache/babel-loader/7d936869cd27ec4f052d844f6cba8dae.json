{"ast":null,"code":"import Axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\n\nconst addToCart = (id, qty) => async (dispatch, getState) => {\n  try {\n    const product = (await Axios.get(`/api/products/${id}`)).data;\n    const item = {\n      name: product.name,\n      qty: qty,\n      image: product.image,\n      price: product.price,\n      countInStock: product.countInStock,\n      product: product._id\n    }; // DISPATCH AND SAVE TO LOCAL STORAGE\n\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: item\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport default addToCart;","map":{"version":3,"sources":["/Users/antonioloza/Desktop/MERNProject/frontend/src/actions/cartActions.js"],"names":["Axios","CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","id","qty","dispatch","getState","product","get","data","item","name","image","price","countInStock","_id","type","payload","localStorage","setItem","JSON","stringify","cart","cartItems","error","console","log","removeFromCart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;;AAEA,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC5D,MAAI;AACH,UAAMC,OAAO,GAAG,CAAC,MAAMR,KAAK,CAACS,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAP,EAAyCM,IAAzD;AACA,UAAMC,IAAI,GAAG;AACZC,MAAAA,IAAI,EAAEJ,OAAO,CAACI,IADF;AAEZP,MAAAA,GAAG,EAAEA,GAFO;AAGZQ,MAAAA,KAAK,EAAEL,OAAO,CAACK,KAHH;AAIZC,MAAAA,KAAK,EAAEN,OAAO,CAACM,KAJH;AAKZC,MAAAA,YAAY,EAAEP,OAAO,CAACO,YALV;AAMZP,MAAAA,OAAO,EAAEA,OAAO,CAACQ;AANL,KAAb,CAFG,CAUH;;AACAV,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEhB,aAAR;AAAuBiB,MAAAA,OAAO,EAAEP;AAAhC,KAAD,CAAR;AACAQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC;AACA,GAbD,CAaE,OAAOC,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD,CAjBD;;AAmBA,OAAO,MAAMG,cAAc,GAAIxB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC7DD,EAAAA,QAAQ,CAAC;AACRW,IAAAA,IAAI,EAAEf,gBADE;AAERgB,IAAAA,OAAO,EAAEd;AAFD,GAAD,CAAR;AAKAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC;AACA,CAPM;AASP,eAAerB,SAAf","sourcesContent":["import Axios from 'axios'\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\n\nconst addToCart = (id, qty) => async (dispatch, getState) => {\n\ttry {\n\t\tconst product = (await Axios.get(`/api/products/${id}`)).data\n\t\tconst item = {\n\t\t\tname: product.name,\n\t\t\tqty: qty,\n\t\t\timage: product.image,\n\t\t\tprice: product.price,\n\t\t\tcountInStock: product.countInStock,\n\t\t\tproduct: product._id,\n\t\t}\n\t\t// DISPATCH AND SAVE TO LOCAL STORAGE\n\t\tdispatch({ type: CART_ADD_ITEM, payload: item })\n\t\tlocalStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n\tdispatch({\n\t\ttype: CART_REMOVE_ITEM,\n\t\tpayload: id\n\t})\n\n\tlocalStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport default addToCart\n"]},"metadata":{},"sourceType":"module"}