{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk]; //start reducuer with initial state spreading the middleware with the spread operator \n//into an array\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/antonioloza/Desktop/MERNProject/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,kBADJ,EAEIC,qBAFJ,EAGIC,oBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,QAMW,4BANX;AAOA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EACQC,mBADR,EAEQC,kBAFR,EAGQC,wBAHR,EAIQC,eAJR,EAKQC,iBALR,EAMQC,iBANR,QAMkC,yBANlC;AAOA,SAASC,kBAAT,EACQC,mBADR,EAEQC,eAFR,EAGQC,kBAHR,EAIQC,gBAJR,QAI+B,0BAJ/B;AAMA,MAAMC,OAAO,GAAGtB,eAAe,CAAC;AAC5BuB,EAAAA,WAAW,EAAEnB,kBADe;AAE5BoB,EAAAA,cAAc,EAAEnB,qBAFY;AAG5BoB,EAAAA,aAAa,EAAEnB,oBAHa;AAI5BoB,EAAAA,aAAa,EAAEnB,oBAJa;AAK5BoB,EAAAA,aAAa,EAAEnB,oBALa;AAM5BoB,EAAAA,IAAI,EAAEnB,WANsB;AAO5BoB,EAAAA,SAAS,EAAEnB,gBAPiB;AAQ5BoB,EAAAA,YAAY,EAAEnB,mBARc;AAS5BoB,EAAAA,WAAW,EAAEnB,kBATe;AAU5BoB,EAAAA,iBAAiB,EAAEnB,wBAVS;AAW5BoB,EAAAA,QAAQ,EAAEnB,eAXkB;AAY5BoB,EAAAA,UAAU,EAAEnB,iBAZgB;AAa5BoB,EAAAA,UAAU,EAAEnB,iBAbgB;AAc5BoB,EAAAA,WAAW,EAAEnB,kBAde;AAe5BoB,EAAAA,YAAY,EAAEnB,mBAfc;AAgB5BoB,EAAAA,QAAQ,EAAEnB,eAhBkB;AAiB5BoB,EAAAA,WAAW,EAAEnB,kBAjBe;AAkB5BoB,EAAAA,SAAS,EAAEnB;AAlBiB,CAAD,CAA/B;AAuBA,MAAMoB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GACqB,EADlD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAKA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIA,MAAMK,YAAY,GAAG;AACjBpB,EAAAA,IAAI,EAAE;AACFqB,IAAAA,SAAS,EAAER,oBADT;AAEFS,IAAAA,eAAe,EAAEH;AAFf,GADW;AAKjBlB,EAAAA,SAAS,EAAE;AAAEsB,IAAAA,QAAQ,EAAEL;AAAZ;AALM,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAClD,KAAD,CAAnB,C,CAEA;AACA;;AAEA,MAAMmD,KAAK,GAAGtD,WAAW,CACrBuB,OADqB,EAErB0B,YAFqB,EAGrB7C,mBAAmB,CAACF,eAAe,CAAC,GAAGmD,UAAJ,CAAhB,CAHE,CAAzB;AAKA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { \n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer\n    } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, \n        userRegisterReducer, \n        userDetailsReducer, \n        userUpdateProfileReducer,\n        userListReducer,\n        userDeleteReducer,\n        userUpdateReducer, } from './reducers/userReducers'\nimport { orderCreateReducer, \n        orderDetailsReducer, \n        orderPayReducer, \n        orderListMyReducer,\n        orderListReducer} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    \n    \n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \n? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') \n? JSON.parse(localStorage.getItem('userInfo')) \n: null\n\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') \n? JSON.parse(localStorage.getItem('shippingAddress')) \n: {}\n\nconst initialState = {\n    cart: { \n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n    userLogin: { userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\n//start reducuer with initial state spreading the middleware with the spread operator \n//into an array\n\nconst store = createStore(\n    reducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}