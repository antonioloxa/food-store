{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from '../constants/productConstants'; //dispatch actions to the reducers thunk is a function within a function\n\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/antonioloza/Desktop/MERNProject/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","listProducts","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","listMyOrders","getState","ORDER_LIST_MY_REQUEST","userLogin","userInfo","config","headers","Authorization","token","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,oBANJ,QAOO,+BAPP,C,CASA;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,oBADD;AAELU,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAE;AACNC,MAAAA,IAAI,EAAEN,iBADA;AAENS,MAAAA,OAAO,EACPC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAD1B,GAEMF,KAAK,CAACE;AALN,KAAF,CAAR;AAOF;AACL,CApBM;AAsBP,OAAO,MAAMC,kBAAkB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAC1D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBM,EAAG,EAA9B,CAAvB;AAEAT,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,uBADD;AAELO,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAE;AACNC,MAAAA,IAAI,EAAEH,oBADA;AAENM,MAAAA,OAAO,EACPC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACUF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAD9B,GAEUF,KAAK,CAACE;AALV,KAAF,CAAR;AAOH;AACJ,CApBM;AAuBP,OAAO,MAAMG,YAAY,GAAG,MAAO,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AAC7D,MAAI;AACAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEW;AADD,KAAD,CAAR;AAIA,UAAM;AACEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADb,QAEEH,QAAQ,EAFhB;AAIA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADnC;AADE,KAAf;AAMA,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,sBAAX,EAAkCY,MAAlC,CAAvB;AAEAf,IAAAA,QAAQ,CAAE;AACNC,MAAAA,IAAI,EAAEkB,qBADA;AAENf,MAAAA,OAAO,EAAEF;AAFH,KAAF,CAAR;AAKH,GAtBD,CAsBE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAE;AACNC,MAAAA,IAAI,EAAEmB,kBADA;AAENhB,MAAAA,OAAO,EACPC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAD1B,GAEMF,KAAK,CAACE;AALN,KAAF,CAAR;AAOH;AACJ,CAhCM","sourcesContent":["import axios from 'axios'\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL, \n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL\n} from '../constants/productConstants'\n\n//dispatch actions to the reducers thunk is a function within a function\n\nexport const listProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/products')\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch ({\n            type: PRODUCT_LIST_FAIL,\n            payload: \n            error.response && error.response.data.message \n                ? error.response.data.message \n                : error.message,\n        })\n     }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n    \n        const { data } = await axios.get(`/api/products/${id}`)\n    \n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        })\n    \n    } catch (error) {\n        dispatch ({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: \n            error.response && error.response.data.message \n                    ? error.response.data.message \n                    : error.message,\n        })\n    }\n}\n\n\nexport const listMyOrders = ( ) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        })\n\n        const { \n                userLogin: { userInfo },\n            } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/myorders`, config)\n\n        dispatch ({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data,\n        })\n        \n    } catch (error) {\n        dispatch ({\n            type: ORDER_LIST_MY_FAIL,\n            payload: \n            error.response && error.response.data.message \n                ? error.response.data.message \n                : error.message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}