{"ast":null,"code":"import _regeneratorRuntime from\"/Users/antonioloza/Desktop/MERNProject/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/antonioloza/Desktop/MERNProject/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Axios from'axios';import{CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD}from'../constants/cartConstants';var addToCart=function addToCart(id,qty){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var product,item;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Axios.get(\"/api/products/\".concat(id));case 3:product=_context.sent.data;item={name:product.name,qty:qty,image:product.image,price:product.price,countInStock:product.countInStock,product:product._id};// DISPATCH AND SAVE TO LOCAL STORAGE\ndispatch({type:CART_ADD_ITEM,payload:item});localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var removeFromCart=function removeFromCart(id){return function(dispatch,getState){dispatch({type:CART_REMOVE_ITEM,payload:id});localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems));};};export var saveShippingAddress=function saveShippingAddress(data){return function(dispatch){dispatch({type:CART_SAVE_SHIPPING_ADDRESS,payload:data});localStorage.setItem('shippingAddress',JSON.stringify(data));};};export var savePaymentMethod=function savePaymentMethod(data){return function(dispatch){dispatch({type:CART_SAVE_PAYMENT_METHOD,payload:data});localStorage.setItem('paymentMethod',JSON.stringify(data));};};export default addToCart;","map":{"version":3,"sources":["/Users/antonioloza/Desktop/MERNProject/frontend/src/actions/cartActions.js"],"names":["Axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","get","product","data","item","name","image","price","countInStock","_id","type","payload","localStorage","setItem","JSON","stringify","cart","cartItems","console","log","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"iQAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,gBAAxB,CAA0CC,0BAA1C,CAAsEC,wBAAtE,KAAsG,4BAAtG,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,EAAD,CAAKC,GAAL,iGAAa,iBAAOC,QAAP,CAAiBC,QAAjB,yKAENT,CAAAA,KAAK,CAACU,GAAN,yBAA2BJ,EAA3B,EAFM,QAEvBK,OAFuB,eAE4BC,IAF5B,CAGvBC,IAHuB,CAGhB,CACZC,IAAI,CAAEH,OAAO,CAACG,IADF,CAEZP,GAAG,CAAEA,GAFO,CAGZQ,KAAK,CAAEJ,OAAO,CAACI,KAHH,CAIZC,KAAK,CAAEL,OAAO,CAACK,KAJH,CAKZC,YAAY,CAAEN,OAAO,CAACM,YALV,CAMZN,OAAO,CAAEA,OAAO,CAACO,GANL,CAHgB,CAW7B;AACAV,QAAQ,CAAC,CAAEW,IAAI,CAAElB,aAAR,CAAuBmB,OAAO,CAAEP,IAAhC,CAAD,CAAR,CACAQ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC,EAb6B,+EAe7BC,OAAO,CAACC,GAAR,cAf6B,oEAAb,oEAAlB,CAmBA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACvB,EAAD,QAAQ,UAACE,QAAD,CAAWC,QAAX,CAAwB,CAC7DD,QAAQ,CAAC,CACRW,IAAI,CAAEjB,gBADE,CAERkB,OAAO,CAAEd,EAFD,CAAD,CAAR,CAIAe,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAAlC,EACA,CAN6B,EAAvB,CAQP,MAAO,IAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAClB,IAAD,QAAU,UAACJ,QAAD,CAAc,CAC1DA,QAAQ,CAAC,CACRW,IAAI,CAAEhB,0BADE,CAERiB,OAAO,CAAER,IAFD,CAAD,CAAR,CAIAS,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAwCC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAxC,EACA,CANkC,EAA5B,CAQP,MAAO,IAAMmB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACnB,IAAD,QAAU,UAACJ,QAAD,CAAc,CACxDA,QAAQ,CAAC,CACRW,IAAI,CAAEf,wBADE,CAERgB,OAAO,CAAER,IAFD,CAAD,CAAR,CAIAS,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAsCC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAtC,EACA,CANgC,EAA1B,CAQP,cAAeP,CAAAA,SAAf","sourcesContent":["import Axios from 'axios'\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\n\nconst addToCart = (id, qty) => async (dispatch, getState) => {\n\ttry {\n\t\tconst product = (await Axios.get(`/api/products/${id}`)).data\n\t\tconst item = {\n\t\t\tname: product.name,\n\t\t\tqty: qty,\n\t\t\timage: product.image,\n\t\t\tprice: product.price,\n\t\t\tcountInStock: product.countInStock,\n\t\t\tproduct: product._id,\n\t\t}\n\t\t// DISPATCH AND SAVE TO LOCAL STORAGE\n\t\tdispatch({ type: CART_ADD_ITEM, payload: item })\n\t\tlocalStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n\tdispatch({\n\t\ttype: CART_REMOVE_ITEM,\n\t\tpayload: id\n\t})\n\tlocalStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n\tdispatch({\n\t\ttype: CART_SAVE_SHIPPING_ADDRESS,\n\t\tpayload: data,\n\t})\n\tlocalStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n\tdispatch({\n\t\ttype: CART_SAVE_PAYMENT_METHOD,\n\t\tpayload: data,\n\t})\n\tlocalStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\nexport default addToCart\n"]},"metadata":{},"sourceType":"module"}